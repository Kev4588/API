@model PURIS_FLASH.Models.ViewModel.UsersViewModel
@{
    ViewBag.Title = "Create";
}


<style>
    body {
        background-color: #f8f9fa;
    }

    .form-container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-title {
        font-family: 'Staatliches', cursive;
        color: #343a40;
        text-align: center;
        margin-bottom: 20px;
    }

    .form-group label {
        font-weight: bold;
    }

    .btn-custom {
        width: 100%;
        margin-top: 10px;
    }



        body {
            margin: 0;
            padding: 0;
            color: white;
            font-family: 'body';
            background-image: none;
            background-color: black;
            background-image: url('@Url.Content("~/Content/images/fondoNegroDerecha.jpg")');
            background-size: cover;
            background-repeat: round;
            background-attachment: fixed;
            background-color: black;
            position: relative;
        }

   .body-content {
       min-width: 100%;
       margin-top: 15px;
   }




</style>














<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registro de Usuario</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

</head>
<body>

    @* // Muestra un mensaje de alerta si existe en TempData *@
    @if (TempData["Mensaje"] != null)
    {
        <script>
        alert('@TempData["Mensaje"]');
        TempData["Mensaje"] = null;
        </script>
    }

    @* // Contenedor principal del formulario *@
    <div class="container mt-5">
        @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { @class = "needs-validation", id = "mainForm", novalidate = "novalidate" }))
        {
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="form-container">
                        <h2 class="form-title">Crear una cuenta</h2>

                        @* // Campo para ingresar la cédula *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cedula)
                            @Html.TextBoxFor(model => model.Cedula, new { @class = "form-control", placeholder = "Cédula", required = "required", pattern = "[0-9]{9}", title = "La cédula debe contener solo números y tener 9 dígitos" })
                            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar el nombre *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", placeholder = "Nombre", required = "required" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar el primer apellido *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrimerApellido)
                            @Html.TextBoxFor(model => model.PrimerApellido, new { @class = "form-control", placeholder = "Primer Apellido", required = "required" })
                            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar el segundo apellido *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.SegundoApellido)
                            @Html.TextBoxFor(model => model.SegundoApellido, new { @class = "form-control", placeholder = "Segundo Apellido", required = "required" })
                            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar la edad *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Edad)
                            @Html.TextBoxFor(model => model.Edad, new { @class = "form-control", placeholder = "Edad", required = "required", pattern = "[0-9]+", title = "La edad debe ser un número" })
                            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para seleccionar el género *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sexo)
                            @Html.DropDownListFor(model => model.Sexo, new SelectList(
                                new[]
                                {
                                    new SelectListItem { Text = "-- Elegir Género --", Value = "" },
                                    new SelectListItem { Text = "Femenino", Value = "F" },
                                    new SelectListItem { Text = "Masculino", Value = "M" },
                                    new SelectListItem { Text = "Otro", Value = "O" }
                                }, "Value", "Text"), new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar el teléfono *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", placeholder = "Teléfono", required = "required", pattern = "[0-9]{8}", title = "El teléfono debe contener exactamente 8 dígitos" })
                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar la dirección *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Direccion)
                            @Html.TextAreaFor(model => model.Direccion, new { @class = "form-control", placeholder = "Dirección", required = "required" })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar el correo *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Correo)
                            @Html.TextBoxFor(model => model.Correo, new { @class = "form-control", placeholder = "Correo", required = "required", type = "email" })
                            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar la contraseña *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Contrasena)
                            @Html.TextBoxFor(model => model.Contrasena, new { @class = "form-control", id = "Contrasena", placeholder = "Contraseña", type = "password", required = "required" })
                            @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para seleccionar la pregunta de seguridad *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.PreguntaSeguridad)
                            @Html.DropDownListFor(model => model.PreguntaSeguridad, new SelectList(
                                new[]
                                {
                                    new SelectListItem { Text = "-- Seleccione su pregunta de seguridad --", Value = "" },
                                    new SelectListItem { Text = "¿Cuál es el nombre de tu mejor amigo durante la infancia?", Value = "AmigoInfancia" },
                                    new SelectListItem { Text = "¿Cuál era la marca de tu primer vehículo?", Value = "MarcaPrimerVehiculo" },
                                    new SelectListItem { Text = "¿Cuál es tu película o libro favorito?", Value = "PeliculaLibroFavorito" },
                                    new SelectListItem { Text = "¿Cuál es el nombre de tu primer mascota?", Value = "PrimerMascota" }
                                }, "Value", "Text"), new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.PreguntaSeguridad, "", new { @class = "text-danger" })
                        </div>

                        @* // Campo para ingresar la respuesta de seguridad *@
                        <div class="form-group">
                            @Html.LabelFor(model => model.RespuestaPreguntaSeguridad)
                            @Html.TextBoxFor(model => model.RespuestaPreguntaSeguridad, new { @class = "form-control", placeholder = "Respuesta", required = "required" })
                            @Html.ValidationMessageFor(model => model.RespuestaPreguntaSeguridad, "", new { @class = "text-danger" })
                        </div>

                        @* // Botón para crear la cuenta y botón para regresar al login *@
                        <button type="submit" class="btn btn-primary btn-custom">Crear Cuenta</button>
                        <button type="button" class="btn btn-secondary btn-custom" onclick="window.location.href='@Url.Action("Login", "Login")'">Regresar</button>
                    </div>
                </div>
            </div>
        }
    </div>


<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>
</body>
</html>


