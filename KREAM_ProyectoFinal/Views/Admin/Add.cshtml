@model KREAM_ProyectoFinal.Models.TableViewModel.UsersTableViewModel

@{
    ViewBag.Title = "Agregar Nuevo Usuario";
}

<h2>Agregar Nuevo Usuario</h2>

@using (Html.BeginForm("Add", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">


        <div class="form-group">
            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", type = "text" } })
            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" }, type = "text" })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" }, type = "text" })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
            <select id="GenderTypeDropdown" name="Sexo" class="form-control" data-val="true" data-val-required="Genero obligatorio">
                <option value="" selected>-- Elegir Genero --</option>
                <option value="F">Femenino</option>
                <option value="M">Masculino</option>
            </select>
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
        </div>

       
        <div class="form-group">
            @Html.LabelFor(model => model.Contrasena, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
        </div>


    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Agregar" class="btn btn-primary" />
            <input type="button" class="btn btn-outline-danger" value="Regresar"
                   onclick="document.location.href = '@Url.Content("~/Admin/Index")'" />
        </div>
    </div>
}

