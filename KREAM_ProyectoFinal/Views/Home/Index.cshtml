<style>

    .card-body {
        flex: 1 1 auto;
        padding: var(--bs-card-spacer-y) var(--bs-card-spacer-x);
        color: var(--bs-card-color);
        height: 520px;
    }


    .carousel-item {
        text-align: center;
        overflow: hidden;
        clip-path: polygon(30px 0%, 100% 0, 100% calc(100% - 30px), calc(100% - 30px) 100%, 0 100%, 0% 30px);
    }

        .carousel-item img {
            max-height: 300px;
            width: max-content !important;
            object-fit: cover;
        }

    .carousel-indicators {
        bottom: 10px;
    }

        .carousel-indicators button {
            width: 10px;
            height: 10px;
            border-radius: 50%;
        }

        .carousel-indicators [data-bs-target] {
            box-sizing: content-box;
            flex: 0 1 auto;
            width: 12px;
            height: 18px;
            padding: 0;
            margin-right: 3px;
            margin-left: 3px;
            text-indent: -999px;
            cursor: pointer;

            background-clip: padding-box;
            border: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            transition: opacity 0.6s ease;
        }



    /*Lo que sigue controla que todas las imagenes tengan el mismo tamaño y un width ya heredado de 100%*/
    .img-container {
        height: 232px; /* Altura deseada */
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ddd; /* Color de fondo si no hay imagen */
    }

    .img-fluid {
        height: 232px;
        object-fit: cover;
    }

    button:not(:disabled), [type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled) {
        cursor: pointer;
        opacity: 1;
    }






    .button-85 {
        padding: 0.6em 2em;
        border: none;
        outline: none;
        color: rgb(255, 255, 255);
        background: #111;
        cursor: pointer;
        position: relative;
        z-index: 0;
        border-radius: 10px;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

        .button-85:before {
            content: "";
            background: linear-gradient( 45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000 );
            position: absolute;
            top: -2px;
            left: -2px;
            background-size: 400%;
            z-index: -1;
            filter: blur(5px);
            -webkit-filter: blur(5px);
            width: calc(100% + 4px);
            height: calc(100% + 4px);
            animation: glowing-button-85 20s linear infinite;
            transition: opacity 0.3s ease-in-out;
            border-radius: 10px;
        }

    @@keyframes glowing-button-85 {
        0% {
            background-position: 0 0;
        }

        50% {
            background-position: 400% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    .button-85:after {
        z-index: -1;
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        background: #222;
        left: 0;
        top: 0;
        border-radius: 10px;
    }

    .button-29 {
        align-items: center;
        appearance: none;
        background-image: radial-gradient(100% 100% at 100% 0, #5adaff 0, #5468ff 100%);
        border: 0;
        border-radius: 6px;
        box-shadow: rgba(45, 35, 66, .4) 0 2px 4px,rgba(45, 35, 66, .3) 0 7px 13px -3px,rgba(58, 65, 111, .5) 0 -3px 0 inset;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        display: inline-flex;
        font-family: "JetBrains Mono",monospace;
        height: 48px;
        justify-content: center;
        line-height: 1;
        list-style: none;
        overflow: hidden;
        padding-left: 16px;
        padding-right: 16px;
        position: relative;
        text-align: left;
        text-decoration: none;
        transition: box-shadow .15s,transform .15s;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        white-space: nowrap;
        will-change: box-shadow,transform;
        font-size: 18px;
    }



    .boton-agregar-carrito {
        height: 31px;
        margin-left: 5px;
        width: 282%;
        padding: 1px;
    }

        .boton-agregar-carrito svg {
            width: 21px;
            height: 20px;
        }

    .card:hover {
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        transform: scale(1.02);
        transition: all 0.3s ease;
    }

    /* Contenedor de filtros sticky */
    .contenedor-filtros {
        justify-content: center;
        display: flex;
        color: white;
        align-items: center;
        padding: 30px;
        width: 100%; /* Cambiar a 100% para ocupar todo el espacio disponible */
        margin: auto;
        /*background: #c32424;*/
        position: sticky; /* Para que sea sticky */
        top: 20px; /* Se queda fijo cuando llegas a 20px del top */
        z-index: 1000; /* Asegura que esté sobre otros elementos */
    }

        /* Alineación de los filtros uno al lado del otro */
        .contenedor-filtros form {
            position: relative;
            display: flex;
            top: 50px;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 163px;
            text-align: center;
            align-items: center;
        }

        .contenedor-filtros .mb-3 {
            flex: 1; /* Hace que cada filtro ocupe un espacio proporcional */
            min-width: 200px; /* Establece un ancho mínimo para cada filtro */
        }

    .sticky {
        position: sticky;
        top: 0;
        z-index: 100;
        margin-bottom: 90px;
    }

        @@font-face {
        font-family: 'body';
        src: url('@Url.Content("~/Content/Font/Roboto-Regular.otf")') format('opentype');
        font-weight: normal;
        font-style: normal;
    }



    body {
        margin: 0;
        padding: 0;
        color: white;
        font-family: 'body';
        background-image: none;
        background-color: black;
        background-image: url('@Url.Content("~/Content/images/fondoBlancoDerecha.jpg")');
        background-size: cover;
        background-repeat: round;
        background-attachment: fixed;
        background-color: black;
        position: relative;
    }

   .body-content {
       min-width: 100%;
       margin-top: 15px;
   }

   /*------ NUEVO ESTILO DE CARD ------------ */

    .card {

        height: 100%;
        background: #171717;
        transition: 1s ease-in-out;
        clip-path: polygon(30px 0%, 100% 0, 100% calc(100% - 30px), calc(100% - 30px) 100%, 0 100%, 0% 30px);
        border-top-right-radius: 20px;
        border-bottom-left-radius: 20px;
        display: flex;
        flex-direction: column;
    }

    .card-title, .card-text {
        font-weight: bold;
        color: white;
        text-align: center;
    }

    .card-text {
        /* font-weight: 400; */
        font-size: 0.89em;
        margin: 1em;
    }

    .card-img {
        width: 4.8em;

        background: white;
        border-radius: 15px;
        margin: auto;
    }

    .carousel-control-prev, .carousel-control-next {
        margin-top: 1em;
        display: flex;
        justify-content: center;
        gap: 1em;
    }

    .card a {
        color: white;
        transition: .4s ease-in-out;
    }

        .card a:hover {
            color: red;
        }

    .card button {
        padding: 0.8em 1.7em;
        display: block;
        margin: auto;
        border-radius: 25px;
        border: none;
        font-weight: bold;
        /*background: #ffffff;

         color: rgb(0, 0, 0);*/
        transition: .4s ease-in-out;
    }




    .carousel {
        background-color: white;

        position: relative;
    }


    .banner {
        display: flex;
        position: absolute;
        top: -23px;
        height: 135%;
        left: -137px;
        z-index: -1;
        width: 115%;
        border-radius: 391px 661px 600px 0px;
        opacity: 0; /* Inicialmente invisible */
        transform: translateX(-100%); /* Empieza fuera de la pantalla a la izquierda */
        animation: slideInBanner 1s forwards; /* Aplica la animación */
    }

    @@keyframes slideInBanner {
    to {
        opacity: 1;
        transform: translateX(0); /* Mueve el banner a su posición original */
    }
}



    /* Oculta el formulario por defecto mientras que sale el banner rojo */
    .hidden-form {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }

    /* Muestra el formulario con una transición suave */
    .visible-form {
        opacity: 1;
    }



    .cinto-rojo {
        margin-left: 40px!important;
    }



    .alineaCards {
        margin-left: 81px;
        margin-top: 31px;
    }





</style>

<main>
    <div class="container mt-4">
        <div class="row">
            <!-- Filtros en el lado izquierdo -->
            <div class="col-lg-12 mb-12 sticky  cinto-rojo">
                <div class="contenedor-filtros">

                    <div class="banner">

                        <img src="@Url.Content("~/Content/images/BANNER.png")" class="banner">
                    </div>


                    <form method="get" action="@Url.Action("Index", "Home")" class="hidden-form">


                        <!--Personas-->
                        <!--Categoria-->
                        <div class="mb-3">
                            <label for="categoria" class="form-label">Categoría:</label>
                            <select class="form-select" id="categoria" name="categoria">
                                <option value="">Cualquier Categoría</option>
                                @foreach (var categoria in ViewBag.Categoria as SelectList)
                                {
                                    <option value="@categoria.Value" @(categoria.Text == ViewBag.CategoriaSeleccionada ? "selected" : "")>@categoria.Text</option>
                                }
                            </select>
                        </div>
                        <!--Categoria-->
                        <!-- Precio Máximo -->
                        <div class="mb-3">

                            <label for="precioMax" class="form-label">Precio Máximo:</label>
                            <input type="range" class="form-range" id="precioMax" name="precioMax" min="1000" max=@ViewBag.PrecioMaximo step="100" value="@ViewBag.PrecioMaxSeleccionado" oninput="updatePrecioMaxOutput(this.value)">
                            <input type="text" id="precioMaxOutput" class="form-control" readonly value="₡@ViewBag.PrecioMaxSeleccionado">
                        </div>
                        <!-- Precio Máximo -->

                        <div class="mb-3">
                            <label for="lugar" class="form-label">Lugar:</label>
                            <select class="form-select" id="lugar" name="lugar">
                                <option value="">Cualquier Lugar</option>
                                @foreach (var lugar in ViewBag.Lugar as SelectList)
                                {
                                    <option value="@lugar.Value" @(lugar.Text == ViewBag.LugarSeleccionado ? "selected" : "")>@lugar.Text</option>
                                }
                            </select>
                        </div>




                        <button type="submit" class="btn btn-success">Buscar</button>
                    </form>










                </div>
            </div>
            <!-- Contenido de productos en el lado derecho -->
            <div class="col-lg-12 alineaCards ">
                <div class="row">
                    @foreach (var producto in Model)
                    {
                        <div class="col-md-4 col-lg-4 mb-4">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title" >@producto.Nombre</h5>
                                    <p class="card-text" style="height:35px !important">@producto.Lugar | @producto.Categoria</p>
                                    <p class="card-text"><strong>Precio: @string.Format("₡{0:N0}", producto.Precio) | @producto.CantidadEnStock Disponibles </strong></p><!--N0 SIGNIFICA QUE NO LE VAMOS A METER DECIMALES POR SI LO VEN POR AHI-->
                                    <div id="carouselProducto@(producto.ProductoID)" class="carousel slide" data-bs-ride="carousel" data-bs-interval="10000">
                                        <div class="carousel-inner">
                                            @if (producto.Imagen != null && producto.Imagen.Length > 0)
                                            {
                                                <div class="carousel-item active">
                                                    <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen)" alt="Imagen del Producto" class="img-fluid card-img" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="carousel-item active">
                                                    <img src="~/Images/No-image-found.jpg" alt="Imagen predeterminada" class="img-fluid card-img" />
                                                </div>
                                            }

                                            @if (producto.Imagen2 != null && producto.Imagen2.Length > 0)
                                            {
                                                <div class="carousel-item active">
                                                    <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen)" alt="Imagen del Producto" class="img-fluid card-img" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="carousel-item active">
                                                    <img src="~/Images/No-image-found.jpg" alt="Imagen predeterminada" class="img-fluid card-img" />
                                                </div>
                                            }

                                            <!-- Imagen 3 -->
                                            @if (producto.Imagen3 != null && producto.Imagen3.Length > 0)
                                            {
                                                <div class="carousel-item @(producto.Imagen == null || producto.Imagen.Length == 0 ? "active" : "")">
                                                    <div class="img-container">
                                                        <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen3)" alt="Tercera Imagen del Producto" class="img-fluid" />
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselProducto@(producto.ProductoID)" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Previous</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#carouselProducto@(producto.ProductoID)" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    </div>
                                    <div class="mt-3 text-end">
                                        <button class="btn btn-success" onclick="document.location.href = '@Url.Content("~/Producto/MostrarInformacion/")@producto.ProductoID'">
                                            Ver más
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Script para actualizar el valor del rango de precio -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var precioMax = document.getElementById('precioMax');
        var precioMaxOutput = document.getElementById('precioMaxOutput');

        // Actualizar el valor del precio máximo al cargar la página
        precioMaxOutput.value = '₡' + precioMax.value;

        // Añadir evento de cambio para actualizar el valor del precio máximo
        precioMax.addEventListener('input', function () {
            precioMaxOutput.value = '₡' + this.value;
        });
    });

    function updatePrecioMaxOutput(value) {
        document.getElementById('precioMaxOutput').value = '₡' + value;
    }
</script>



<!--este es para controlar el banner rojo al cargar y que no cargue los forms hasta que eso este completado -->
<script>
document.addEventListener("DOMContentLoaded", function () {
    // Selecciona el banner y el formulario
    const banner = document.querySelector(".banner");
    const form = document.querySelector(".hidden-form");

    // Escucha el final de la animación del banner
    banner.addEventListener("animationend", function () {
        // Añade la clase visible al formulario para mostrarlo
        form.classList.add("visible-form");
    });
});

        </script>



<!--eSTE Script lo quehace es controlar el costo de filtro que se usa en los precios , -->
<script>
    // Actualiza el valor del output al cambiar el slider
    document.getElementById('precioMax').addEventListener('input', function () {
        document.getElementById('precioMaxOutput').value = '₡' + this.value;
    });

</script>

