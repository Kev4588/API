<script>
    // Ejecuta la función al cargar la página
    document.addEventListener('DOMContentLoaded', actualizarContadorCarrito);
</script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />


<style>


            @@font-face {
    font-family: 'body';
    src: url('@Url.Content("~/Content/Font/Roboto-Regular.otf")') format('opentype');
    font-weight: normal;
    font-style: normal;
}



        body {
            margin: 0;
            padding: 0;
            color: white;
            font-family: 'body';
            background-image: none;
            background-color: black;
            background-image: url('@Url.Content("~/Content/images/fondoNegroDerecha.jpg")');
            background-size: cover;
            background-repeat: round;
            background-attachment: fixed;
            background-color: black;
            position: relative;
        }

   .body-content {
       min-width: 100%;
       margin-top: 15px;
   }

    .product-details {
        max-width: 800px;
        margin: 20px auto;
        background-color: white;
        color: black;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .product-images {
        display: flex;
        align-items: flex-start;
        margin-bottom: 25px;
    }

        .product-images .no-image {
            display: flex;
            justify-content: center; /* Centra el contenido horizontalmente */
            align-items: center; /* Centra el contenido verticalmente */
            margin-bottom: 25px;
        }

        .product-images img {
            max-width: 400px;
            height: auto;
            margin-right: 20px;
            transition: transform 0.3s ease;
            cursor: pointer;
        }

            .product-images img:hover {
                transform: scale(1.1); /* Hacer zoom al pasar el cursor sobre la imagen */
            }

    .product-info p {
        margin-bottom: 10px;
    }

    .product-info select {
        margin-bottom: 10px;
        padding: 5px;
    }

    .product-rating span {
        color: #ffcc00;
        font-size: 24px;
        margin-bottom: 20px;
    }

    .carrito,
    .regresar {
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        font-size: 16px;
        margin-bottom: 10px;
        width: auto;
        display: block;
        text-align: center;
    }

    .card-body {
        flex: 1 1 auto;
        padding: var(--bs-card-spacer-y) var(--bs-card-spacer-x);
        color: var(--bs-card-color);
        height: 520px;
    }


    .carousel-item {
        text-align: center;
        overflow: hidden;
        clip-path: polygon(30px 0%, 100% 0, 100% calc(100% - 30px), calc(100% - 30px) 100%, 0 100%, 0% 30px);
    }

        .carousel-item img {
            max-height: 300px;
            width: max-content !important;
            object-fit: cover;
        }

    .carousel-indicators {
        bottom: 10px;
    }

        .carousel-indicators button {
            width: 10px;
            height: 10px;
            border-radius: 50%;
        }

        .carousel-indicators [data-bs-target] {
            box-sizing: content-box;
            flex: 0 1 auto;
            width: 12px;
            height: 18px;
            padding: 0;
            margin-right: 3px;
            margin-left: 3px;
            text-indent: -999px;
            cursor: pointer;
            background-clip: padding-box;
            border: 0;
            border-top: 10px solid transparent;
            border-bottom: 10px solid transparent;
            transition: opacity 0.6s ease;
        }



    /*Lo que sigue controla que todas las imagenes tengan el mismo tamaño y un width ya heredado de 100%*/
    .img-container {
        height: 232px; /* Altura deseada */
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ddd; /* Color de fondo si no hay imagen */
    }

    .img-fluid {
        height: 232px;
        object-fit: cover;
    }


    .card:hover {
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        transform: scale(1.02);
        transition: all 0.3s ease;
    }

    /* Contenedor de filtros sticky */
    .contenedor-filtros {
        justify-content: center;
        display: flex;
        color: white;
        align-items: center;
        padding: 30px;
        width: 100%; /* Cambiar a 100% para ocupar todo el espacio disponible */
        margin: auto;
        /*background: #c32424;*/
        position: sticky; /* Para que sea sticky */
        top: 20px; /* Se queda fijo cuando llegas a 20px del top */
        z-index: 1000; /* Asegura que esté sobre otros elementos */
    }

        /* Alineación de los filtros uno al lado del otro */
        .contenedor-filtros form {
            position: relative;
            display: flex;
            top: 50px;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 163px;
            text-align: center;
            align-items: center;
        }

        .contenedor-filtros .mb-3 {
            flex: 1; /* Hace que cada filtro ocupe un espacio proporcional */
            min-width: 200px; /* Establece un ancho mínimo para cada filtro */
        }

    .volver-btn, .agregar-btn {
        background-color: #8D99AE;
        border-color: #8D99AE;
        color: black;
        transition: all 0.3s ease-in-out;
    }

        .volver-btn:hover, .agregar-btn:hover {
            background-color: #818da2;
            border-color: #818da2;
            color: black;
            transition: all 0.3s ease-in-out;
        }



</style>


<!--                                     VENDEDOR                                                   -->

<main>




    <div class="container mt-4" style="margin-left: 380px;">

        <h2 class="mb-4" style="color: white;">Lista de Tours | @ViewBag.UsuarioActual  </h2> <!--USAMOS VIEWBAGS PARA JALAR DE CONTROLADOR EL DATO DEL USUARIOACTUAL QUE DECLARAMOS EN EL CONTROLER-->

        <a class="btn btn-primary mb-4 agregar-btn" href="@Url.Action("Add")"><i class="bi bi-bag-plus-fill"></i> Agregar</a>

        <div class="row">
            @foreach (var producto in Model)
            {
                <div class="col-md-4 col-lg-4 mb-4" style="margin-bottom: 4.5rem !important;">
                    <!--Esta linea lo que hace es que en pantallas grandes y medianas cambie a 3 columnas , de esta fomra vamos a dejar espacio para el buscador de tennis  | como esta puesto con 4 es como decir 12/4 = 3 12 porque bootstrap usa ese sistema de 12 -->
                    <div class="card">
                        <div class="card-body">


                            <h5 class="card-title" style="height:100px !important">@producto.Nombre</h5>
                            <p class="card-text" style="height:35px !important">@producto.Lugar | @producto.Personas personas | @producto.Categoria</p>
                            <p class="card-text"><strong>Precio: @string.Format("${0:N2}", producto.Precio) | @producto.CantidadEnStock Disponibles </strong></p>


                            <!-- Contenedor del carrusel para cada tarjeta -->
                            <div id="carouselProducto@(producto.ProductoID)" class="carousel slide" data-bs-ride="carousel" data-bs-interval="10000">
                                <!--hace que la transicion dure 10 segundos salvo que la persona cambie a otra imagen-->
                                <div class="carousel-inner">
                                    @for (int i = 0; i < 3; i++)
                                    {
                                        <div class="carousel-item @(i == 0 ? "active" : "")">
                                            @if (i == 0 && producto.Imagen != null && producto.Imagen.Length > 0)
                                            {
                                                <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen)" alt="Imagen del Producto" class="img-fluid" />
                                            }

                                            <!--Cuando no hay imagen -->
                                            @if (i == 0 && (producto.Imagen == null || producto.Imagen.Length == 0))
                                            {
                                                <!--Este codigo lo que hace es decirle , si por alguna razon no hay imagen , mantente del mismo tamaño como si hubiera , esto para que no choque el estilo de las cosas ni las imagenes en caso que la persona no haya metido una imagen o solo tenga 2 de 3 digamos -->
                                                <!--Ademas con pasar la variable tambien va a decir cual es la imagen que no se ha subido por si le interesa al vendedor-->
                                                <div style="height: 232px;  display: flex; justify-content: center; align-items: center;">
                                                    <p style="font-size: x-large; color: #0d6efd;">Sin Imagen [@i]</p>
                                                </div>
                                            }


                                            @if (i == 1 && producto.Imagen2 != null && producto.Imagen2.Length > 0)
                                            {
                                                <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen2)" alt="Segunda Imagen del Producto" class="img-fluid" />
                                            }


                                            <!--Cuando no hay imagen -->
                                            @if (i == 1 && (producto.Imagen2 == null || producto.Imagen2.Length == 0))
                                            {
                                                <!--Este codigo lo que hace es decirle , si por alguna razon no hay imagen , mantente del mismo tamaño como si hubiera , esto para que no choque el estilo de las cosas ni las imagenes en caso que la persona no haya metido una imagen o solo tenga 2 de 3 digamos -->

                                                <div style="height: 232px; display: flex; justify-content: center; align-items: center;">
                                                    <p style="font-size: x-large; color: #0d6efd;">Sin Imagen [@i]</p>
                                                </div>
                                            }

                                            @if (i == 2 && producto.Imagen3 != null && producto.Imagen3.Length > 0)
                                            {
                                                <img src="data:image/png;base64,@Convert.ToBase64String(producto.Imagen3)" alt="Tercera Imagen del Producto" class="img-fluid" />
                                            }


                                            <!--Cuando no hay imagen -->
                                            @if (i == 2 && (producto.Imagen3 == null || producto.Imagen3.Length == 0))
                                            {
                                                <!--Este codigo lo que hace es decirle , si por alguna razon no hay imagen , mantente del mismo tamaño como si hubiera , esto para que no choque el estilo de las cosas ni las imagenes en caso que la persona no haya metido una imagen o solo tenga 2 de 3 digamos -->

                                                <div style="height: 232px; display: flex; justify-content: center; align-items: center;">
                                                    <p style="font-size: x-large; color: #0d6efd;">Sin Imagen [@i]</p>
                                                </div>
                                            }



                                        </div>
                                    }
                                </div>



                                <!-- Controles personalizados -->
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselProducto@(producto.ProductoID)" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselProducto@(producto.ProductoID)" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>

                            </div>


                            <!-- Acciones -->
                            <div class="mt-3">
                                <a class="btn btn-secondary" href="@Url.Action("Edit", new { ProductoID = @producto.ProductoID })">Editar</a>
                                <a class="btn btn-danger" href="@Url.Action("Delete", new { ProductoID = @producto.ProductoID })" onclick="return confirm('¿Estás seguro de que deseas eliminar este producto?');">Eliminar</a>
                            </div>


                        </div>
                    </div>
                </div>
            }
        </div>
    </div>


</main>
<a href="@Url.Action("Index", "Home")" class="btn btn-success volver-btn">Regresar al menú principal</a>
<script>
    // Inicializar los carruseles al cargar la página
    @foreach (var producto in Model)
    {
        <text>
        var carouselProducto@(producto.ProductoID) = new bootstrap.Carousel(document.getElementById('carouselProducto@(producto.ProductoID)'));
        </text>
    }
</script>





<!-- Agregar Font Awesome y Bootstrap (popper.js y bootstrap.js) -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.min.js"></script>

<style>
    .floating-buttons {
        position: fixed;
        bottom: 50%;
        right: 20px;
        transform: translateY(50%);
    }

        .floating-buttons a {
            display: block;
            margin-bottom: 10px;
        }
</style>

<script>
    // Inicializar tooltips de Bootstrap
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>





