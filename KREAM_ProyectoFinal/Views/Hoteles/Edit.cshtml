@model PURIS_FLASH.Models.TableViewModel.HotelesTableViewModel

@{
    ViewBag.Title = "Editar Tour";
}

<h2 class="text-center mt-4 mb-5">Editando Tour: @ViewBag.HotelNombre</h2>

<div class="container">
    @using (Html.BeginForm("Edit", "Hoteles", FormMethod.Post, new { enctype = "multipart/form-data", @class = "row g-3" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.IDHotel)

        <div class="col-md-6">
            <label class="form-label">Nombre del Hotel</label>
            @Html.EditorFor(model => model.NombreHotel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreHotel, "", new { @class = "text-danger" })
        </div>



        <div class="col-md-6">
            <label class="form-label">Tipo de Transporte</label>
            @Html.DropDownListFor(model => model.TipoDeHabitacion, new List<SelectListItem>
            {
                new SelectListItem { Value = "Moto", Text = "Moto" },
                new SelectListItem { Value = "Carro", Text = "Carro" },
                new SelectListItem { Value = "Bicicleta", Text = "Bicicleta" },
                new SelectListItem { Value = "Cuadraciclo", Text = "Cuadraciclo" },
                new SelectListItem { Value = "Camion", Text = "Camion" }
            }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoDeHabitacion, "", new { @class = "text-danger" })
        </div>




        <div class="col-md-6">
            <label class="form-label">Teléfono (max 8 digitos)</label>
            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @type = "text", @pattern = "[0-9]{8}", @maxlength = "8", @inputmode = "numeric", @title = "Solo se permiten números con una longitud de 8 dígitos" })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>


        <div class="col-md-6">
            <label class="form-label">Descripción</label>
            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control", @rows = 5 })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>



        <div class="col-md-6">
            <label class="form-label">Imagen 1</label>
            <input class="form-control" type="file" name="NuevaImagen" onchange="mostrarImagenCargada(this, 'Imagen', 'imagenActual', 'contenedorImagen')" />
            @if (Model.Imagen != null && Model.Imagen.Length > 0)
            {
                <div class="mt-3">
                    <img id="imagenActual" src="data:image;base64,@Convert.ToBase64String(Model.Imagen)" class="img-thumbnail" alt="Imagen actual 1" />
                </div>
            }
        </div>

        <div class="col-md-6 offset-6">
            <label class="form-label">Imagen 2</label>
            <input class="form-control" type="file" name="NuevaImagen2" onchange="mostrarImagenCargada(this, 'Imagen2', 'imagenActual2', 'contenedorImagen2')" />
            @if (Model.Imagen2 != null && Model.Imagen2.Length > 0)
            {
                <div class="mt-3">
                    <img id="imagenActual2" src="data:image;base64,@Convert.ToBase64String(Model.Imagen2)" class="img-thumbnail" alt="Imagen actual 2" />
                </div>
            }
        </div>

        <div class="col-md-6 offset-6">
            <label class="form-label">Imagen 3</label>
            <input class="form-control" type="file" name="NuevaImagen3" onchange="mostrarImagenCargada(this, 'Imagen3', 'imagenActual3', 'contenedorImagen3')" />
            @if (Model.Imagen3 != null && Model.Imagen3.Length > 0)
            {
                <div class="mt-3">
                    <img id="imagenActual3" src="data:image;base64,@Convert.ToBase64String(Model.Imagen3)" class="img-thumbnail" alt="Imagen actual 3" />
                </div>
            }
        </div>

        <div class="col-12 mt-4">
            <button type="submit" class="btn btn-success">Guardar</button>
            <a class="btn btn-secondary ms-2" href="@Url.Content("~/Hoteles/MostrarInformacion")">Regresar</a>
        </div>
    }
</div>

<script>
    function mostrarImagenCargada(input, id, imagenId, contenedorId) {
        var imagen = document.getElementById(imagenId);
        imagen.onload = function () {
            imagen.style.display = "block";
        };
        imagen.src = URL.createObjectURL(input.files[0]);
    }
</script>

<style>
    .img-thumbnail {
        width: 100%;
        max-width: 200px;
        height: auto;
    }
</style>
